var Ke=Object.create;var ae=Object.defineProperty,He=Object.defineProperties,Xe=Object.getOwnPropertyDescriptor,Qe=Object.getOwnPropertyDescriptors,Ze=Object.getOwnPropertyNames,Ce=Object.getOwnPropertySymbols,er=Object.getPrototypeOf,Le=Object.prototype.hasOwnProperty,rr=Object.prototype.propertyIsEnumerable;var Fe=(o,e,r)=>e in o?ae(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r,Z=(o,e)=>{for(var r in e||(e={}))Le.call(e,r)&&Fe(o,r,e[r]);if(Ce)for(var r of Ce(e))rr.call(e,r)&&Fe(o,r,e[r]);return o},Te=(o,e)=>He(o,Qe(e)),De=o=>ae(o,"__esModule",{value:!0});var tr=(o,e)=>{for(var r in e)ae(o,r,{get:e[r],enumerable:!0})},Oe=(o,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Ze(e))!Le.call(o,i)&&(r||i!=="default")&&ae(o,i,{get:()=>e[i],enumerable:!(t=Xe(e,i))||t.enumerable});return o},ee=(o,e)=>Oe(De(ae(o!=null?Ke(er(o)):{},"default",!e&&o&&o.__esModule?{get:()=>o.default,enumerable:!0}:{value:o,enumerable:!0})),o),ir=(o=>(e,r)=>o&&o.get(e)||(r=Oe(De({}),e,1),o&&o.set(e,r),r))(typeof WeakMap!="undefined"?new WeakMap:0);var N=(o,e,r)=>new Promise((t,i)=>{var a=l=>{try{s(r.next(l))}catch(u){i(u)}},n=l=>{try{s(r.throw(l))}catch(u){i(u)}},s=l=>l.done?t(l.value):Promise.resolve(l.value).then(a,n);s((r=r.apply(o,e)).next())});var fr={};tr(fr,{Deobfuscator:()=>ke,Transformer:()=>G});var Ie=ee(require("@javascript-obfuscator/escodegen")),ur=ee(require("acorn")),dr=ee(require("acorn-loose"));function h(o,e){for(let r in e)o[r]=e[r];return!0}function ue(o){return[o.start,o.end].join("!")}var Je=ee(require("eslint-scope"));var G=class{constructor(e,r){this.name=e,this.options=this.buildOptions(r)}buildOptions(e){return Z({},e)}};var ve=require("acorn-walk");//! MIT License
//!
//! Copyright (C) 2012-2020 by various contributors (see AUTHORS)
//!
//! Permission is hereby granted, free of charge, to any person obtaining a copy
//! of this software and associated documentation files (the "Software"), to deal
//! in the Software without restriction, including without limitation the rights
//! to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//! copies of the Software, and to permit persons to whom the Software is
//! furnished to do so, subject to the following conditions:
//!
//! The above copyright notice and this permission notice shall be included in
//! all copies or substantial portions of the Software.
//!
//! THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//! IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//! THE SOFTWARE.
//!
//! ^ https://github.com/acornjs/acorn/blob/49ac049201/AUTHORS
//! ^ https://github.com/acornjs/acorn/blob/49ac049201/acorn-walk/src/index.js
function m(o,e,r,t,i){let a=[],n=r||ve.base;return function s(l,u,p){let c=p||l.type,f=e[c],d=l!==a[a.length-1];if(d&&a.push(l),n[c](l,u,s),f)try{f(l,u||a,a)}catch(x){console.error(`Caught an error while attempting to run AST visitor!

node =`,l,`
err =`,x)}d&&a.pop()}(o,t,i),o}var Ne=class{constructor(e){this.node=e}};function X(o,e,r,t){let i=t||ve.base,a=e[0],n=e[1];try{(function s(l,u,p){let c=p||l.type;if((a==null||l.start<=a)&&(n==null||l.end>=n)&&i[c](l,{},s),(a==null||l.start===a)&&(n==null||l.end===n)&&l.type===r)throw new Ne(l)})(o)}catch(s){if(s instanceof Ne)return s.node;throw s}}function Be(o){return o.type==="PrivateIdentifier"}function I(o){return o.type==="Literal"}function A(o){return I(o)&&typeof o.value=="string"}function S(o){return I(o)&&typeof o.value=="number"}function $(o){return I(o)&&typeof o.value=="boolean"}function M(o){return o.type==="UnaryExpression"}function k(o){return M(o)&&S(o.argument)}function D(o){return o.type==="ExpressionStatement"}function J(o){return o.type==="SequenceExpression"}function C(o){return o.type==="AssignmentExpression"}function R(o){return o.type==="ReturnStatement"}function F(o){return o.type==="VariableDeclaration"}function ne(o){return o.type==="ArrayExpression"}function y(o){return o.type==="Identifier"}function qe(o){return o.type==="ArrowFunctionExpression"}function B(o){return o.type==="FunctionExpression"}function Pe(o){return o.type==="UpdateExpression"}function O(o){return o.type==="CallExpression"}function v(o){return o.type==="BlockStatement"}function re(o){return o.type==="SwitchStatement"}function q(o){return o.type==="BinaryExpression"}function _(o){return o.type==="MemberExpression"}function Q(o){return o.type==="IfStatement"}function Re(o){return o.type==="ForStatement"}function Ve(o){return o.type==="ObjectExpression"}function Me(o){return o.type==="LogicalExpression"}function U(o){return JSON.parse(JSON.stringify(o))}function Ue(o){if(!I(o)&&!y(o))throw new TypeError("Node is not Literal or Identifier");return I(o)?o.value.toString():o.name}function z(o){return o.filter(e=>e.type!=="EmptyStatement")}var de=class extends G{constructor(e){super("ControlFlow",e);this.findStorageNodeAliases=(e,r)=>(m(r,{BlockStatement(t){let i=ue(t);if(!e.controlFlowStorageNodes[i]||t.body.length===0)return;let a=e.controlFlowStorageNodes[i];m(t,{VariableDeclaration(n){let s=[];for(let l of n.declarations)!l.init||!y(l.id)||!y(l.init)||a.aliases.includes(l.init.name)&&(a.aliases.push(l.id.name),s.push(`${l.start}!${l.end}`));n.declarations=n.declarations.filter(l=>!s.includes(`${l.start}!${l.end}`)),n.declarations.length===0&&(n.type="EmptyStatement")}})}}),this);this.replacer=(e,r)=>{let{translateCallExp:t}=this;return m(r,{BlockStatement(i){let a=ue(i);if(!e.controlFlowStorageNodes[a])return;let n=e.controlFlowStorageNodes[a];m(i,{MemberExpression(s){if(!y(s.object)||!y(s.property)||!n.aliases.includes(s.object.name))return;let l=s.property.name,u=-1;(u=n.literals.findIndex(p=>p.identifier===l))!==-1&&h(s,{type:"Literal",value:n.literals[u].value})},CallExpression(s){if(!_(s.callee)||!y(s.callee.object)||!y(s.callee.property)||!n.aliases.includes(s.callee.object.name))return;let l=s.callee.property.name,u=-1;if((u=n.functions.findIndex(p=>p.identifier===l))!==-1){let p=n.functions[u].node;h(s,t(p,s))}}})}}),this}}translateCallExp(e,r){if(!R(e.body.body[0]))throw new TypeError("Function in CFSN was invalid (not a returnstatement)");if(!e.params.every(s=>y(s)))throw new TypeError("Function in CFSN was invalid (not ident params)");if(!e.body.body[0].argument)throw new TypeError("Function in CFSN was invalid (void return)");let t=e.params,i={},a=0;for(let s of t)i[s.name]=r.arguments[a],++a;let n=U(e.body.body[0].argument);return m(n,{Identifier(s){!i[s.name]||h(s,i[s.name])}}),n}populateEmptyObjects(e){return m(e.ast,{BlockStatement(r){m(r,{VariableDeclarator(t){if(!y(t.id)||!t.init||!Ve(t.init)||t.init.properties.length!==0)return;let i=t.id.name;m(r,{ExpressionStatement(a){if(!C(a.expression))return;let n=a.expression;if(!_(n.left)||!y(n.left.object)||!y(n.left.property)||n.left.object.name!==i)return;let s={type:"Property",start:0,end:0,method:!1,shorthand:!1,computed:!1,key:n.left.property,value:n.right,kind:"init"};t.init.properties.push(s),a.type="EmptyStatement",e.log(`${i}.${n.left.property.name} = ${n.right.type}`)}})}})}}),this}findStorageNode(e){let{findStorageNodeAliases:r}=this;return m(e.ast,{BlockStatement(t){let i=ue(t);e.controlFlowStorageNodes[i]||t.body.length!==0&&m(t,{VariableDeclaration(a){var s;let n=[];for(let l of a.declarations){if(!y(l.id)||((s=l.init)==null?void 0:s.type)!=="ObjectExpression"||l.init.properties.length===0||!l.init.properties.every(p=>p.type!=="SpreadElement"&&["FunctionExpression","Literal"].includes(p.value.type)&&(p.key.type==="Literal"||p.key.type==="Identifier")&&Ue(p.key).length===5))continue;e.controlFlowStorageNodes[i]={identifier:l.id.name,aliases:[l.id.name],functions:[],literals:[]};let u=e.controlFlowStorageNodes[i];for(let p of l.init.properties){let c=p.key,f=y(c)?c.name:c.value,d=-1;if(I(p.value))(d=u.literals.findIndex(x=>x.identifier===f))!==-1?u.literals[d].value=p.value.value:u.literals.push({identifier:f,value:p.value.value});else if(B(p.value)){let x=z(p.value.body.body);if(x.length!==1||!R(x[0]))continue;let g=U(p.value);g.body.body=x,(d=u.functions.findIndex(T=>T.identifier===f))!==-1?u.functions[d].node=g:u.functions.push({identifier:f,node:g})}}e.log("Found control flow node id =",l.id.name,"#fn =",u.functions.length,"#lit =",u.literals.length),e.removeGarbage&&n.push(`${l.start}!${l.end}`)}a.declarations=a.declarations.filter(l=>!n.includes(`${l.start}!${l.end}`)),a.declarations.length===0&&(a.type="EmptyStatement"),r(e,t).replacer(e,t)}})}}),this}deflatten(e){return m(e.ast,{WhileStatement(r,t,i){if(!$(r.test)||r.test.value!==!0||!v(r.body)||r.body.body.length===0||!re(r.body.body[0]))return;let a=i[i.length-2];if(!v(a))return;let n=r.body.body[0];if(!_(n.discriminant)||!y(n.discriminant.object)||!Pe(n.discriminant.property)||n.discriminant.property.operator!=="++"||n.discriminant.property.prefix!==!1||!y(n.discriminant.property.argument))return;let s=n.discriminant.object.name,l=n.discriminant.property.argument.name,u=[],p=-1;if(m(a,{VariableDeclaration(d){let x=[];for(let g of d.declarations)if(!!y(g.id)&&!!g.init)if(g.id.name===s){if(!O(g.init)||!_(g.init.callee)||!A(g.init.callee.object)||!y(g.init.callee.property)||g.init.callee.property.name!=="split"||!A(g.init.arguments[0]))continue;let T=g.init.callee.object.value,E=g.init.arguments[0].value;u=T.split(E),x.push(`${g.start}!${g.end}`)}else if(g.id.name===l){if(!S(g.init))continue;p=g.init.value,x.push(`${g.start}!${g.end}`)}else continue;d.declarations=d.declarations.filter(g=>!x.includes(`${g.start}!${g.end}`)),d.declarations.length===0&&(d.type="EmptyStatement")}}),u.length===0||p===-1)return;let c=[];for(let d=p;d<u.length;d++){let x=u[d],g=n.cases.find(T=>T.test&&I(T.test)&&T.test.value===x);if(!g)return;c.push(g.consequent.filter(T=>T.type!=="ContinueStatement"))}let f=a.body.findIndex(d=>d.type===r.type&&d.start===r.start&&d.end===r.end);a.body.splice(f,1,...c.flat()),e.log("Found flattened control flow arr =",u,"idx =",p)}}),this}transform(e){return N(this,null,function*(){this.populateEmptyObjects(e).findStorageNode(e).deflatten(e)})}};var ce=class extends G{constructor(e){super("Desequence",e)}desequence(e){function r(t){for(let i of t.body)if(D(i)&&J(i.expression)){let a=t.body.findIndex(s=>s.start===i.start&&s.end===i.end),n=i.expression.expressions.map(s=>({type:"ExpressionStatement",expression:s}));t.body[a]=n}h(t,{body:t.body.flat()})}return m(e,{BlockStatement(t){r(t)},Program(t){r(t)}}),this}transform(e){return N(this,null,function*(){this.desequence(e.ast)})}};var fe=class extends G{constructor(e){super("LiteralMap",e)}demap(e){return m(e.ast,{BlockStatement(r){let t={};m(r,{VariableDeclaration(i){let a=[];for(let n of i.declarations){if(!n.init||n.init.type!=="ObjectExpression"||!y(n.id)||n.init.properties.length===0||!n.init.properties.every(l=>l.type!=="SpreadElement"&&(I(l.key)||y(l.key))&&I(l.value)))continue;let s=n.id.name;t[s]=t[s]||{};for(let l of n.init.properties){let u=l,p=u.key.type==="Identifier"?u.key.name:u.key.value;t[s][p]=u.value.value}e.removeGarbage&&a.push(`${n.start}!${n.end}`)}i.declarations=i.declarations.filter(n=>!a.includes(`${n.start}!${n.end}`))}}),m(r,{MemberExpression(i){if(!y(i.object)||!I(i.property)&&!y(i.property))return;let a=t[i.object.name];if(!a)return;let n=y(i.property)?i.property.name:i.property.value,s=a[n];typeof s!="undefined"&&h(i,{type:"Literal",value:s})}})}}),this}literals(e){function r(t){var a;let i=e.scopeManager.acquire(t);if(!!i)for(let n of i.variables){if(n.name==="q")debugger;if(n.name==="arguments"||n.identifiers.length!==1||n.defs.length!==1)continue;let s=n.defs[0];if(s.type!=="Variable")continue;let l=s.node;if(((a=l.init)==null?void 0:a.type)==="Literal"&&!(typeof l.init.value=="string"&&l.init.value.length===65)&&!!n.references.every(u=>u.init||u.isReadOnly()))for(let u of n.references){if(u.init){let c=s.node,f=s.parent;f.type==="VariableDeclaration"&&(f.declarations=f.declarations.filter(d=>d.start!==c.start&&d.end!==c.end));continue}let p=X(t,u.identifier.range,"Identifier");!p||h(p,l.init)}}}return m(e.ast,{FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r}),this}transform(e){return N(this,null,function*(){this.demap(e).literals(e)})}};var nr=/^[a-z][\w]*$/i,me=class extends G{constructor(e){super("MemberExpressionCleaner",e)}clean(e){return m(e,{MemberExpression(r){Be(r.property)||!A(r.property)||!r.property.value.match(nr)||(r.computed=!1,h(r.property,{type:"Identifier",name:r.property.value}))}}),this}transform(e){return N(this,null,function*(){this.clean(e.ast)})}};function te(o,e=!1){if(o.argument.type!=="Literal")throw new TypeError("UnaryExpression argument is not Literal");if(typeof o.argument.value!="number"&&!e)throw new TypeError("UnaryExpression argument value is not number");let r=e?parseInt(o.argument.value):o.argument.value;return o.operator==="-"&&(r=r*-1),r}function L(o,e=!1){if(S(o))return o.value;if(A(o)&&e)return parseInt(o.value);if(M(o))return te(o,e);throw new TypeError("Couldn't translate node to Number")}function ye(o){return o<0?{type:"UnaryExpression",prefix:!0,operator:"-",argument:{type:"Literal",start:0,end:0,value:Math.abs(o)}}:{type:"Literal",value:o}}function se(o,e,r){switch(e){case"+":return o+r;case"*":return o*r;case"-":return o-r;case"/":return o/r;default:return o}}var K=class extends G{constructor(e){super("Simplify",e);this.ALLOWED_MATH_OPERS=["+","-","*","/"];this.ALLOWED_COMPARISON_OPERS=["==","===","!=","!==",">","<","<=",">="]}negativeString(e){return m(e.ast,{UnaryExpression(r){r.argument.type==="Literal"&&typeof r.argument.value=="string"&&r.argument.value.startsWith("0x")&&r.operator==="-"&&h(r,{type:"Literal",value:te(r,!0)})}}),this}binEval(e,r,t){switch(r){case"==":return e==t;case"===":return e===t;case"!=":return e!=t;case"!==":return e!==t;case">":return e>t;case"<":return e<t;case"<=":return e<=t;case">=":return e>=t}throw new TypeError(`Operator ${r} is invalid`)}stringConcat(e){return m(e.ast,{BinaryExpression(r){A(r.left)&&A(r.right)&&r.operator==="+"&&h(r,{type:"Literal",value:r.left.value+r.right.value})}}),this}math(e){let{ALLOWED_MATH_OPERS:r}=this;return m(e,{BinaryExpression(t){if(!!r.includes(t.operator)&&(k(t.left)&&h(t.left,{type:"Literal",value:te(t.left)}),k(t.right)&&h(t.right,{type:"Literal",value:te(t.right)}),S(t.left)&&S(t.right))){let i=se(t.left.value,t.operator,t.right.value);if(isNaN(i))return;h(t,ye(i))}}}),this}truthyFalsy(e){return m(e.ast,{UnaryExpression(r){r.operator==="!"&&(!ne(r.argument)||r.argument.elements.length===0&&h(r,{type:"Literal",value:!1}))}}),m(e.ast,{UnaryExpression(r){if(r.operator==="!"){if($(r.argument))return h(r,{type:"Literal",value:!r.argument.value});if(S(r.argument)){if(![0,1].includes(r.argument.value))return;h(r,{type:"Literal",value:!r.argument.value})}}}}),this}literalComparison(e){let{ALLOWED_COMPARISON_OPERS:r,binEval:t}=this;return m(e,{BinaryExpression(i){if(!S(i.left)&&!k(i.left)&&!A(i.left)||!S(i.right)&&!k(i.right)&&!A(i.right)||!r.includes(i.operator))return;let a=I(i.left)?i.left.value:te(i.left),n=I(i.right)?i.right.value:te(i.right),s=t(a,i.operator,n);h(i,{type:"Literal",value:s})}}),this}singleToBlock(e){return m(e.ast,{ForStatement(r){v(r.body)||h(r.body,{type:"BlockStatement",body:[U(r.body)]})},WhileStatement(r){v(r.body)||h(r.body,{type:"BlockStatement",body:[U(r.body)]})},IfStatement(r){v(r.consequent)||h(r.consequent,{type:"BlockStatement",body:[U(r.consequent)]}),r.alternate&&!v(r.alternate)&&h(r.alternate,{type:"BlockStatement",body:[U(r.alternate)]})}}),this}conditionalExpression(e){return m(e,{ConditionalExpression(r,t,i){if(!!$(r.test)){if(!r.test.value){r.test.value=!0;let a=r.consequent;r.consequent=r.alternate,r.alternate=a}h(r.alternate,{type:"Identifier",name:"undefined"}),h(r,r.consequent)}}}),this}logicalExpression(e){return m(e.ast,{ExpressionStatement(r){if(!D(r)||!Me(r.expression)||!q(r.expression.left)||!J(r.expression.right))return;let t=[...r.expression.right.expressions].map(i=>i.type!=="ExpressionStatement"?{type:"ExpressionStatement",start:i.start,end:i.end,expression:i}:i);h(r,{type:"IfStatement",test:r.expression.left,consequent:{type:"BlockStatement",start:0,end:0,body:t}})}}),this}fixup(e){return m(e.ast,{Literal(r){!S(r)||r.value>=0||h(r,{type:"UnaryExpression",operator:"-",prefix:!0,argument:{type:"Literal",value:Math.abs(r.value)}})}}),m(e.ast,{VariableDeclaration(r){r.declarations=r.declarations.filter(t=>!t.init||t.init.type!=="EmptyStatement"),r.declarations.length===0&&(r.type="EmptyStatement")}}),this}fixProxies(e){return m(e.ast,{CallExpression(r){if(!B(r.callee)&&!qe(r.callee)||!v(r.callee.body)||r.callee.body.body.length!==1||!R(r.callee.body.body[0]))return;let t=r.callee.body.body[0].argument;if(!!t){if(["FunctionExpression","ArrowFunctionExpression","FunctionDeclaration"].includes(t.type))h(r,t);else if(O(t)){if(!r.arguments.every(a=>I(a)||y(a)))return;let i=e.scopeManager.acquire(r.callee);if(!i)return;for(let a of i.variables){if(a.defs.length!==1)continue;let n=a.defs[0];if(n.type!=="Parameter")continue;let s=n.index;for(let l of a.references)h(l.identifier,r.arguments[s])}h(r,t)}}}}),this}transform(e){return N(this,null,function*(){this.negativeString(e).stringConcat(e).math(e.ast).truthyFalsy(e).literalComparison(e.ast).conditionalExpression(e.ast).singleToBlock(e).fixup(e).logicalExpression(e).fixProxies(e)})}};var ge=class extends G{constructor(e){super("StringDecoder",e);this.util_decode=(e,r,t)=>{let i,a=0,n=0,s=1,l=-1,u=f=>f.identifier===r;if(e.stringDecoders.findIndex(u)!==-1)i=e.stringDecoders.find(u);else if((l=e.stringDecoderReferences.findIndex(u))!==-1){let f=e.stringDecoderReferences[l];a+=f.additionalOffset;let d=f;for(r=f.realIdentifier;d;)d=e.stringDecoderReferences.find(u),d&&(a+=d.additionalOffset,r=d.realIdentifier);i=e.stringDecoders.find(u),typeof f.indexArgument=="number"&&(n=f.indexArgument),typeof f.keyArgument=="number"&&(s=f.keyArgument)}else throw new TypeError(`Failed to decode ${r}, no decoder`);a+=i.offset;let p=typeof t[n]=="string"?parseInt(t[n]):t[n],c="";switch(i.type){case 0:return this.decodeSimple(e,r,p,a);case 1:return this.decodeBase64(e,r,p,a);case 2:return c=t[s],this.decodeRC4(e,r,p,c,a);default:throw new TypeError("Invalid decoder function type")}};this.getString=(e,r,t,i)=>{let a=e.stringDecoders.find(s=>s.identifier===r);if(!a)throw new Error(`Failed to find string decoder with identifier "${r}"`);let n=e.stringArrays.find(s=>s.identifier===a.stringArrayIdentifier);if(!n)throw new Error(`Failed to find string array with identifier "${a.stringArrayIdentifier}"`);return n.strings[t+i]};this.calcShift=(e,r,t,i)=>{let{util_decode:a,literals_to_arg_array:n}=this,s=new K({}),l=e.stringArrays.find(c=>c.identifier===t),u=l.strings.length*2,p=0;for(;;){if(p++,p>u)throw new Error(`Push/shift calculation failed (iter=${p}>maxLoops=${u})`);let c=U(i),f=!1;if(l.strings.push(l.strings.shift()),m(c,{CallExpression(d){if(!y(d.callee)||d.callee.name!=="parseInt"||d.arguments.length!==1||d.arguments[0].type!=="CallExpression"||d.arguments[0].callee.type!=="Identifier"||d.arguments[0].arguments.length===0||d.arguments[0].arguments.length>5||d.arguments[0].arguments[0].type!=="Literal"&&d.arguments[0].arguments[0].type!=="UnaryExpression")return;let x=-1;try{let g=n(d.arguments[0].arguments);x=parseInt(a(e,d.arguments[0].callee.name,g))}catch(g){throw g}isNaN(x)?(h(d,{type:"Identifier",name:"NaN"}),f=!0):h(d,{type:"Literal",value:x})}}),!f&&(s.math(c),c.type==="Literal"&&c.value===r))break}e.shiftedArrays++}}literals_to_arg_array(e){return e.map(r=>M(r)?L(r,!0):I(r)?r.value:void 0)}util_b64_decode(e,r){let t="",i="";for(let a=0,n=0,s,l=0;s=r.charAt(l++);~s&&(n=a%4?n*64+s:s,a++%4)?t+=String.fromCharCode(255&n>>(-2*a&6)):0)s=e.indexOf(s);for(let a=0,n=t.length;a<n;a++)i+="%"+("00"+t.charCodeAt(a).toString(16)).slice(-2);return decodeURIComponent(i)}util_rc4_decode(e,r,t){let i=[],a=0,n,s="";r=this.util_b64_decode(e,r);let l;for(l=0;l<256;l++)i[l]=l;for(l=0;l<256;l++)a=(a+i[l]+t.charCodeAt(l%t.length))%256,n=i[l],i[l]=i[a],i[a]=n;l=0,a=0;for(let u=0;u<r.length;u++)l=(l+1)%256,a=(a+i[l])%256,n=i[l],i[l]=i[a],i[a]=n,s+=String.fromCharCode(r.charCodeAt(u)^i[(i[l]+i[a])%256]);return s}decodeSimple(e,r,t,i){return this.getString(e,r,t,i)}decodeBase64(e,r,t,i){let a=this.getString(e,r,t,i),n=e.stringDecoders.find(s=>s.identifier===r&&s.type===1).charset;return this.util_b64_decode(n,a)}decodeRC4(e,r,t,i,a){let n=this.getString(e,r,t,a),s=e.stringDecoders.find(l=>l.identifier===r&&l.type===2).charset;return this.util_rc4_decode(s,n,i)}stringsFinder(e){return e.stringArrays.some(r=>r.type===1)&&m(e.ast,{VariableDeclaration(r,t,i){let a=[];for(let n of r.declarations){if(!y(n.id)||!n.init||!ne(n.init))continue;let s=n.id.name;if(!e.stringArrays.find(u=>u.type===1&&u.identifier===s)||!n.init.elements.every(u=>A(u)))continue;let l=e.stringArrays.find(u=>u.identifier===s);l.strings=n.init.elements.map(u=>u.value),e.log("Found string array at",l.identifier,"#",l.strings.length),a.push(`${n.start}!${n.end}`)}r.declarations=r.declarations.filter(n=>!a.includes(`${n.start}!${n.end}`))}}),m(e.ast,{FunctionDeclaration(r){var l,u,p;let t=r.body;if(t.body.length!==3||!F(t.body[0])||!D(t.body[1])||!R(t.body[2])||!y(t.body[0].declarations[0].id)||!t.body[0].declarations[0].init||((l=t.body[0].declarations[0].init)==null?void 0:l.type)!=="ArrayExpression")return;let i=(u=r.id)==null?void 0:u.name,a=t.body[0].declarations[0].id.name,n=t.body[0].declarations[0].init;if(!C(t.body[1].expression)||!y(t.body[1].expression.left)||t.body[1].expression.left.name!==i||!B(t.body[1].expression.right)||!R(t.body[1].expression.right.body.body[0])||((p=t.body[1].expression.right.body.body[0].argument)==null?void 0:p.type)!=="Identifier"||t.body[1].expression.right.body.body[0].argument.name!==a||!n.elements.every(c=>A(c)))return;let s={identifier:i,type:0,strings:n.elements.map(c=>c.value)};e.removeGarbage&&(r.type="EmptyStatement"),e.stringArrays.push(s),e.log("Found string array at",s.identifier,"#",s.strings.length)}}),this}funcFinder(e){return m(e.ast,{FunctionDeclaration(r){var d,x,g,T;if(!r.id)return;let t=r.body,i=r.id.name;if(t.body.length>3&&t.body.length<1||!t.body[0]||!F(t.body[0])&&t.body.length!==1)return;let a=t.body[t.body.length-1];if(!R(a)||!a.argument)return;let n,s;if(a.argument.type==="SequenceExpression"){if(!R(a)||((d=a.argument)==null?void 0:d.type)!=="SequenceExpression"||a.argument.expressions.length!==2||!C(a.argument.expressions[0])||!O(a.argument.expressions[1]))return;s=a.argument.expressions[0]}else if(a.argument.type==="CallExpression"){if(!y(a.argument.callee)||a.argument.callee.name!==i||!D(t.body[1])||!C(t.body[1].expression))return;s=t.body[1].expression}if(!s||!y(s.left)||s.left.name!==i||!B(s.right))return;n=s.right;let l=e.stringArrays.map(E=>E.identifier),u="";if(t.body.length!==1&&F(t.body[0])){if(((x=t.body[0].declarations[0].init)==null?void 0:x.type)!=="CallExpression"||t.body[0].declarations[0].init.callee.type!=="Identifier"||!l.includes(t.body[0].declarations[0].init.callee.name))return;u=t.body[0].declarations[0].init.callee.name}let p=n.body.body;if(t.body.length===1){if(!p[1]||!F(p[1])||((g=p[1].declarations[0].init)==null?void 0:g.type)!=="MemberExpression"||!y(p[1].declarations[0].init.object)||!y(p[1].declarations[0].init.property))return;u=p[1].declarations[0].init.object.name;let E={identifier:u,type:1,strings:[]};e.stringArrays.push(E),e.log("Added",E.identifier,"as a string array to be found")}let c=0;if(!D(p[0])||!C(p[0].expression)||!q(p[0].expression.right)||!I(p[0].expression.right.right)&&!M(p[0].expression.right.right))return;c=L(p[0].expression.right.right),p[0].expression.right.operator==="-"&&(c=c*-1);let f={identifier:r.id.name,stringArrayIdentifier:u,offset:c,type:0,indexArgument:0,keyArgument:1};if(p.length>=3&&Q(p[2])){if(!v(p[2].consequent)||p[2].consequent.body.length<=1)return;if(D(p[2].consequent.body[0])&&C(p[2].consequent.body[0].expression)&&h(p[2].consequent.body[0],{type:"VariableDeclaration",declarations:[{type:"VariableDeclarator",start:0,end:0,id:{type:"Identifier",start:0,end:0,name:"b64dec"},init:p[2].consequent.body[0].expression.right}]}),D(p[2].consequent.body[1])&&C(p[2].consequent.body[1].expression)&&h(p[2].consequent.body[1],{type:"VariableDeclaration",declarations:[{type:"VariableDeclarator",start:0,end:0,id:{type:"Identifier",start:0,end:0,name:"rc4dec"},init:p[2].consequent.body[1].expression.right}]}),F(p[2].consequent.body[0])&&B(p[2].consequent.body[0].declarations[0].init)&&(!F(p[2].consequent.body[1])||!B(p[2].consequent.body[1].declarations[0].init))){let E=p[2].consequent.body[0].declarations[0].init,b=E.body.body;if(F(b[0])&&A(b[0].declarations[0].init)){let w=b[0].declarations[0].init.value;w.length===65&&(f.type=1,f.charset=w)}}else if(p[2].consequent.body.length>=3&&F(p[2].consequent.body[0])&&B(p[2].consequent.body[0].declarations[0].init)&&F(p[2].consequent.body[1])&&B(p[2].consequent.body[1].declarations[0].init)){let E=p[2].consequent.body[0].declarations[0].init,b=E.body.body;if(F(b[0])&&A(b[0].declarations[0].init)){let w=b[0].declarations[0].init.value;w.length===65&&(f.type=2,f.charset=w)}}}e.stringDecoders.push(f),e.removeGarbage&&(r.type="EmptyStatement"),e.log("Found decoder function",(T=r.id)==null?void 0:T.name,"arrayId =",f.stringArrayIdentifier,"offset =",c,"type =",f.type)}}),this}shiftFinder(e){let{calcShift:r}=this;function t(i){if(!O(i)||i.callee.type!=="FunctionExpression")return!1;let a=i.callee.body.body,n=[...a].reverse();if(a.length<2)return;let s;if(n[0].type==="ForStatement"){if(!v(n[0].body))return;s=z(n[0].body.body)}else if(n[0].type==="WhileStatement"){if(!v(n[0].body))return;s=z(n[0].body.body)}else return;if(s.length!==1||s[0].type!=="TryStatement"||z(s[0].block.body).length!==2)return;let l=z(s[0].block.body);if(i.arguments.length!==2||i.arguments[0].type!=="Identifier"||i.arguments[1].type!=="Literal")return;let u=i.arguments[1].value,p;if(l[0].type==="VariableDeclaration"){if(!l[0].declarations[0].init)return;p=l[0].declarations[0].init}else if(l[0].type==="IfStatement"){if(!q(l[0].test)||l[0].test.operator!=="==="||!S(l[0].test.left)||l[0].test.left.value!==u)return;p=l[0].test.right}else return;if(p.type!=="BinaryExpression")return;let c=i.arguments[0].name,f=e.stringArrays.find(d=>d.identifier===c);if(!f)throw new Error(`Failed to find string array with identifier "${c}" for push/shift calc`);return r(e,u,f.identifier,p),e.log("Found push/shift IIFE breakCond =",u),!!e.removeGarbage}return m(e.ast,{ExpressionStatement(i){if(J(i.expression)){let a=[];for(let n of i.expression.expressions)t(n)&&a.push(`${n.start}!${n.end}`);a&&(i.expression.expressions=i.expression.expressions.filter(n=>!a.includes(`${n.start}!${n.end}`)))}else t(i.expression)&&(i.type="EmptyStatement")}}),this}shiftFinder2(e){let{calcShift:r}=this;function t(i){if(!O(i)||i.callee.type!=="FunctionExpression")return!1;let a=i.callee.body.body,n=[...a].reverse(),s=e.scopeManager.acquire(i.callee);if(!s)return;let l=!1,u;if(m(i,{ExpressionStatement(b){if(!O(b.expression)||b.expression.arguments.length===0||!_(b.expression.callee)||!y(b.expression.callee.object)||!y(b.expression.callee.property)||(u=b.expression.callee.object.name,b.expression.callee.property.name!=="push"))return;let w=b.expression.arguments[0];!O(w)||w.arguments.length===0&&(!_(w.callee)||!y(w.callee.object)||!y(w.callee.property)||w.callee.object.name===u&&w.callee.property.name==="shift"&&(l=!0))}}),!l)return!1;let p=s.variables.find(b=>b.name===u);if(!p||p.defs.length===0)return!1;let c=p.defs[0],f=c.node;if(f.type!=="VariableDeclarator"||!f.init||!O(f.init)||!y(f.init.callee))return!1;let d=f.init.callee.name,x=e.stringArrays.find(b=>b.identifier===d);if(!x)return!1;let g=!1,T,E;return m(i,{IfStatement(b){if(!q(b.test)||b.test.operator!=="=="&&b.test.operator!=="===")return;let w,V;if(S(b.test.left)){if(!q(b.test.right))return;w=b.test.left,V=b.test.right}else if(S(b.test.right)){if(!q(b.test.left))return;w=b.test.right,V=b.test.left}!w||!V||(E=V,T=w.value,g=!0)}}),!g||!T||!E?!1:(e.log("Found push/shift (#2) IIFE stringArray =",x.identifier,"breakCond =",T),r(e,T,x.identifier,E),!0)}return m(e.ast,{ExpressionStatement(i){if(J(i.expression)){let a=[];for(let n of i.expression.expressions)t(n)&&a.push(`${n.start}!${n.end}`);a&&(i.expression.expressions=i.expression.expressions.filter(n=>!a.includes(`${n.start}!${n.end}`)))}else if(M(i.expression)){if(!O(i.expression.argument))return;t(i.expression.argument)&&(i.type="EmptyStatement")}else t(i.expression)&&(i.type="EmptyStatement")}}),this}varReferenceFinder(e){let r=0;return m(e.ast,{VariableDeclaration(t){var a;let i=[];for(let n of t.declarations){if(((a=n.init)==null?void 0:a.type)!=="Identifier"||n.id.type!=="Identifier")continue;let s=n.id.name,l=n.init.name,u=e.stringDecoders.find(p=>p.identifier===l);!u&&(u=e.stringDecoderReferences.find(p=>p.identifier===l),!u)||(e.log("Found variable reference",s,l),e.stringDecoderReferences.push({identifier:s,realIdentifier:l,additionalOffset:0}),r++,e.removeGarbage&&i.push(`${n.start}!${n.end}`))}t.declarations=t.declarations.filter(n=>!i.includes(`${n.start}!${n.end}`)),t.declarations.length===0&&(t.type="EmptyStatement")}}),r}fnReferenceFinder(e){let r=0;return m(e.ast,{FunctionDeclaration(t){let i=z(t.body.body);if(!t.id||i.length!==1||!R(i[0])||!t.params.every(E=>y(E))||!i[0].argument||!O(i[0].argument)||!y(i[0].argument.callee))return;let a=t.id.name,n=i[0],s=i[0].argument,l=s.callee.name,u=0,p=0,c=-1,f=-1,d={identifier:"",indexArgument:-1,keyArgument:-1},x=e.stringDecoders.find(E=>E.identifier===l);if(x)d.identifier=x.identifier,d.indexArgument=x.indexArgument,d.keyArgument=x.keyArgument;else{let E=e.stringDecoderReferences.find(b=>b.identifier===l);if(!E)return;d.identifier=E.identifier,d.indexArgument=E.indexArgument,d.keyArgument=E.keyArgument}let g=t.params.map(E=>E.name),T=s.arguments;for(let E of T)m(E,{Identifier(b){!g.includes(b.name)||(u===d.indexArgument?c=g.indexOf(b.name):u===d.keyArgument&&(f=g.indexOf(b.name)))},BinaryExpression(b){let w=NaN;u===d.indexArgument&&(M(b.left)||S(b.left)||A(b.left)?w=L(b.left,!0):(M(b.right)||S(b.right)||A(b.right))&&(w=L(b.right,!0)),!isNaN(w)&&(b.operator==="-"&&(w=w*-1),p=w))}}),++u;e.stringDecoderReferences.find(E=>E.identifier===a)||(e.stringDecoderReferences.push({identifier:a,realIdentifier:d.identifier,additionalOffset:p,indexArgument:c,keyArgument:f}),r++,e.removeGarbage&&(t.type="EmptyStatement"),e.log("Found func ref id =",a,"offset =",p,"index =",c,"key =",f,"parent =",d.identifier))}}),r}decoder(e){let{util_decode:r,literals_to_arg_array:t}=this;return m(e.ast,{CallExpression(i){if(i.callee.type!=="Identifier"||i.arguments.length===0||i.arguments.length>5||i.arguments[0].type==="SpreadElement"||!i.arguments.every(n=>k(n)||S(n)||A(n)))return;let a=i.callee.name;if(a!=="parseInt")try{let n=t(i.arguments),s=r(e,a,n);h(i,{type:"Literal",value:s})}catch(n){if(n.toString().includes("no decoder"))return;throw n}}}),this}transform(e){return N(this,null,function*(){for(this.stringsFinder(e).funcFinder(e).stringsFinder(e);this.varReferenceFinder(e)>0;)e.log("Searching for more variable references");for(;this.fnReferenceFinder(e)>0;)e.log("Searching for more function references");this.shiftFinder(e).shiftFinder2(e).decoder(e),e.log("shifted =",e.shiftedArrays,"arrays =",e.stringArrays.length)})}};var he=class extends G{constructor(e){super("DeadCode",e)}flipIfStatements(e){return m(e.ast,{IfStatement(r){if(!r.alternate||!$(r.test)||r.test.value!==!1||Q(r.alternate)&&(!$(r.alternate.test)||r.alternate.test.value!==!0||r.alternate.alternate))return;let t=r.consequent,i=Q(r.alternate)?r.alternate.consequent:r.alternate;r.test.value=!r.test.value,h(r,{consequent:i,alternate:t})}}),this}removeDeadAlternates(e){return m(e.ast,{IfStatement(r){!r.alternate||!$(r.test)||r.test.value!==!0||Q(r.alternate)||delete r.alternate}}),this}fixIfStatements(e){return m(e.ast,{IfStatement(r,t,i){if(r.alternate||!$(r.test)||r.test.value!==!0)return;let a=i[i.length-2];if(!v(a)||!v(r.consequent))return;let n=a.body.findIndex(s=>s.type===r.type&&s.start===r.start&&s.end===r.end);a.body.splice(n,1,...r.consequent.body)}}),this}removeDead(e){return m(e.ast,{IfStatement(r,t,i){let a=i[i.length-2];if(!v(a)||!$(r.test)||r.test.value||r.alternate)return;let n=a.body.findIndex(s=>s.type===r.type&&s.start===r.start&&s.end===r.end);a.body.splice(n,1)}}),m(e.ast,{WhileStatement(r,t,i){let a=i[i.length-2];if(!v(a)||!$(r.test)||r.test.value)return;let n=a.body.findIndex(s=>s.type===r.type&&s.start===r.start&&s.end===r.end);a.body.splice(n,1)}}),this}removeDeadVariables(e){function r(t){let i=e.scopeManager.acquire(t);if(!!i){for(let a of i.variables)if(a.name!=="arguments"&&a.identifiers.length===1&&a.defs.length===1&&a.defs[0].type==="Variable"&&a.references.length===0){let n=a.defs[0],s=n.node,l=X(t,n.parent.range,"VariableDeclaration");if(!l)continue;l.declarations=l.declarations.filter(u=>u.start!==s.start&&u.end!==s.end),e.log("Removed dead variable",a.name)}}}return m(e.ast,{FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r}),this}transform(e){return N(this,null,function*(){this.flipIfStatements(e).removeDeadAlternates(e).fixIfStatements(e).removeDead(e)})}};var be=class extends G{constructor(e){super("Demangle",e)}demangleProxies(e){function r(t){if(!v(t.body)||t.body.body.length!==2)return;let i=t.body.body;if(!R(i[i.length-1]))return;let a=i[i.length-1];if(!a.argument)return;let n,s;if(J(a.argument)){if(!C(a.argument.expressions[0])||!O(a.argument.expressions[1]))return;n=a.argument.expressions[0],s=a.argument.expressions[1]}else if(O(a.argument)){if(!C(a.argument.callee))return;n=a.argument.callee,s=a.argument}else return;if(!y(n.left)||!B(n.right))return;let l=[i[0],{type:"ExpressionStatement",expression:n},{type:"ReturnStatement",argument:{type:"CallExpression",callee:{type:"Identifier",name:n.left.name},arguments:s.arguments}}];h(t.body,{body:l})}return m(e.ast,{FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r}),this}demangleStringFuncs(e){function r(t){if(!v(t.body)||!t.id||t.body.body.length!==3)return;let i=t.body.body;if(!D(i[1])||!C(i[1].expression)||!y(i[1].expression.left)||i[1].expression.left.name!==t.id.name||!B(i[1].expression.right))return;let a=i[1].expression.right,n=a.body.body,s=[];if(!F(n[0])||n[0].declarations.length!==1||!n[0].declarations[0].init||!_(n[0].declarations[0].init)||!C(n[0].declarations[0].init.property)||!y(n[0].declarations[0].init.property.left)||!S(n[0].declarations[0].init.property.right)||n[0].declarations[0].init.property.operator!=="-=")return;let l=n[0].declarations[0].init.property.left.name,u=n[0].declarations[0].init.property.right.value;if(s.push({type:"ExpressionStatement",expression:{type:"AssignmentExpression",operator:"=",left:{type:"Identifier",name:l},right:{type:"BinaryExpression",operator:"-",left:{type:"Identifier",name:l},right:{type:"Literal",value:u}}}}),h(n[0].declarations[0].init.property,{type:"Identifier",name:l}),s=[...s,...n],n.length>=3&&Q(s[2])){let p=s[2];if(v(p.consequent)&&p.consequent.body.length>1){if(F(p.consequent.body[0])&&p.consequent.body[0].declarations.length>0&&p.consequent.body[0].declarations[0].init&&B(p.consequent.body[0].declarations[0].init)||D(p.consequent.body[0])&&C(p.consequent.body[0].expression)&&_(p.consequent.body[0].expression.left)&&y(p.consequent.body[0].expression.left.object)&&y(p.consequent.body[0].expression.left.property)&&B(p.consequent.body[0].expression.right)){let c=D(p.consequent.body[0])?p.consequent.body[0].expression.right:p.consequent.body[0].declarations[0].init,f=c.body.body;if(f.length>1&&Re(f[0])&&v(f[0].body)&&D(f[0].body.body[0])&&C(f[0].body.body[0].expression)&&O(f[0].body.body[0].expression.right)&&_(f[0].body.body[0].expression.right.callee)&&f[0].init&&F(f[0].init)){if(f[0].init.declarations[0].init&&A(f[0].init.declarations[0].init)){let d=f[0].init.declarations[0].init.value;d.length===65&&f.splice(0,0,{type:"VariableDeclaration",kind:"const",start:0,end:0,declarations:[{type:"VariableDeclarator",id:{type:"Identifier",name:"charset"},init:{type:"Literal",value:d},start:0,end:0}]})}else if(A(f[0].body.body[0].expression.right.callee.object)&&y(f[0].body.body[0].expression.right.callee.property)&&f[0].body.body[0].expression.right.callee.property.name==="indexOf"){let d=f[0].body.body[0].expression.right.callee.object.value;d.length===65&&f.splice(0,0,{type:"VariableDeclaration",kind:"const",start:0,end:0,declarations:[{type:"VariableDeclarator",id:{type:"Identifier",name:"charset"},init:{type:"Literal",value:d},start:0,end:0}]})}}}F(p.consequent.body[0])&&p.consequent.body[0].declarations.length===2&&p.consequent.body.splice(1,0,{type:"VariableDeclaration",start:0,end:0,kind:p.consequent.body[0].kind,declarations:[p.consequent.body[0].declarations[1]]})}}h(a.body,{body:s})}return m(e.ast,{FunctionDeclaration:r}),this}transform(e){return N(this,null,function*(){this.demangleProxies(e).demangleStringFuncs(e)})}};var xe=class extends G{constructor(e){super("ArrayMap",e)}demap(e){function r(t){if(!v(t.body))return;let i=z(t.body.body);if(!i[0]||!F(i[0]))return;let a=i[0];if(a.declarations.length!==1)return;let n=a.declarations[0];if(!n.init||!ne(n.init)||n.init.elements[0]!==null||!y(n.id))return;let s=n.id.name,l=n.init.elements.map(u=>u&&I(u)?u.value:u);m(t,{MemberExpression(u){if(!y(u.object)||!S(u.property)||u.object.name!==s||u.property.value>=l.length)return;let c=l[u.property.value];h(u,{type:"Literal",value:c})}}),t.body.body=t.body.body.filter(u=>u.start!==a.start&&u.end!==a.end)}return m(e.ast,{FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r}),this}transform(e){return N(this,null,function*(){this.demap(e)})}};var $e=ee(require("mersenne-twister"));var Ge=["ability","able","aboard","about","above","accept","accident","according","account","accurate","acres","across","act","action","active","activity","actual","actually","add","addition","additional","adjective","adult","adventure","advice","affect","afraid","after","afternoon","again","against","age","ago","agree","ahead","aid","air","airplane","alike","alive","all","allow","almost","alone","along","aloud","alphabet","already","also","although","am","among","amount","ancient","angle","angry","animal","announced","another","answer","ants","any","anybody","anyone","anything","anyway","anywhere","apart","apartment","appearance","apple","applied","appropriate","are","area","arm","army","around","arrange","arrangement","arrive","arrow","art","article","as","aside","ask","asleep","at","ate","atmosphere","atom","atomic","attached","attack","attempt","attention","audience","author","automobile","available","average","avoid","aware","away","baby","back","bad","badly","bag","balance","ball","balloon","band","bank","bar","bare","bark","barn","base","baseball","basic","basis","basket","bat","battle","be","bean","bear","beat","beautiful","beauty","became","because","become","becoming","bee","been","before","began","beginning","begun","behavior","behind","being","believed","bell","belong","below","belt","bend","beneath","bent","beside","best","bet","better","between","beyond","bicycle","bigger","biggest","bill","birds","birth","birthday","bit","bite","black","blank","blanket","blew","blind","block","blood","blow","blue","board","boat","body","bone","book","border","born","both","bottle","bottom","bound","bow","bowl","box","boy","brain","branch","brass","brave","bread","break","breakfast","breath","breathe","breathing","breeze","brick","bridge","brief","bright","bring","broad","broke","broken","brother","brought","brown","brush","buffalo","build","building","built","buried","burn","burst","bus","bush","business","busy","but","butter","buy","by","cabin","cage","cake","call","calm","came","camera","camp","can","canal","cannot","cap","capital","captain","captured","car","carbon","card","care","careful","carefully","carried","carry","case","cast","castle","cat","catch","cattle","caught","cause","cave","cell","cent","center","central","century","certain","certainly","chain","chair","chamber","chance","change","changing","chapter","character","characteristic","charge","chart","check","cheese","chemical","chest","chicken","chief","child","children","choice","choose","chose","chosen","church","circle","circus","citizen","city","class","classroom","claws","clay","clean","clear","clearly","climate","climb","clock","close","closely","closer","cloth","clothes","clothing","cloud","club","coach","coal","coast","coat","coffee","cold","collect","college","colony","color","column","combination","combine","come","comfortable","coming","command","common","community","company","compare","compass","complete","completely","complex","composed","composition","compound","concerned","condition","congress","connected","consider","consist","consonant","constantly","construction","contain","continent","continued","contrast","control","conversation","cook","cookies","cool","copper","copy","corn","corner","correct","correctly","cost","cotton","could","count","country","couple","courage","course","court","cover","cow","cowboy","crack","cream","create","creature","crew","crop","cross","crowd","cry","cup","curious","current","curve","customs","cut","cutting","daily","damage","dance","danger","dangerous","dark","darkness","date","daughter","dawn","day","dead","deal","dear","death","decide","declared","deep","deeply","deer","definition","degree","depend","depth","describe","desert","design","desk","detail","determine","develop","development","diagram","diameter","did","die","differ","difference","different","difficult","difficulty","dig","dinner","direct","direction","directly","dirt","dirty","disappear","discover","discovery","discuss","discussion","disease","dish","distance","distant","divide","division","do","doctor","does","dog","doing","doll","dollar","done","donkey","door","dot","double","doubt","down","dozen","draw","drawn","dream","dress","drew","dried","drink","drive","driven","driver","driving","drop","dropped","drove","dry","duck","due","dug","dull","during","dust","duty","each","eager","ear","earlier","early","earn","earth","easier","easily","east","easy","eat","eaten","edge","education","effect","effort","egg","eight","either","electric","electricity","element","elephant","eleven","else","empty","end","enemy","energy","engine","engineer","enjoy","enough","enter","entire","entirely","environment","equal","equally","equator","equipment","escape","especially","essential","establish","even","evening","event","eventually","ever","every","everybody","everyone","everything","everywhere","evidence","exact","exactly","examine","example","excellent","except","exchange","excited","excitement","exciting","exclaimed","exercise","exist","expect","experience","experiment","explain","explanation","explore","express","expression","extra","eye","face","facing","fact","factor","factory","failed","fair","fairly","fall","fallen","familiar","family","famous","far","farm","farmer","farther","fast","fastened","faster","fat","father","favorite","fear","feathers","feature","fed","feed","feel","feet","fell","fellow","felt","fence","few","fewer","field","fierce","fifteen","fifth","fifty","fight","fighting","figure","fill","film","final","finally","find","fine","finest","finger","finish","fire","fireplace","firm","first","fish","five","fix","flag","flame","flat","flew","flies","flight","floating","floor","flow","flower","fly","fog","folks","follow","food","foot","football","for","force","foreign","forest","forget","forgot","forgotten","form","former","fort","forth","forty","forward","fought","found","four","fourth","fox","frame","free","freedom","frequently","fresh","friend","friendly","frighten","frog","from","front","frozen","fruit","fuel","full","fully","fun","function","funny","fur","furniture","further","future","gain","game","garage","garden","gas","gasoline","gate","gather","gave","general","generally","gentle","gently","get","getting","giant","gift","girl","give","given","giving","glad","glass","globe","go","goes","gold","golden","gone","good","goose","got","government","grabbed","grade","gradually","grain","grandfather","grandmother","graph","grass","gravity","gray","great","greater","greatest","greatly","green","grew","ground","group","grow","grown","growth","guard","guess","guide","gulf","gun","habit","had","hair","half","halfway","hall","hand","handle","handsome","hang","happen","happened","happily","happy","harbor","hard","harder","hardly","has","hat","have","having","hay","he","headed","heading","health","heard","hearing","heart","heat","heavy","height","held","hello","help","helpful","her","herd","here","herself","hidden","hide","high","higher","highest","highway","hill","him","himself","his","history","hit","hold","hole","hollow","home","honor","hope","horn","horse","hospital","hot","hour","house","how","however","huge","human","hundred","hung","hungry","hunt","hunter","hurried","hurry","hurt","husband","ice","idea","identity","if","ill","image","imagine","immediately","importance","important","impossible","improve","in","inch","include","including","income","increase","indeed","independent","indicate","individual","industrial","industry","influence","information","inside","instance","instant","instead","instrument","interest","interior","into","introduced","invented","involved","iron","is","island","it","its","itself","jack","jar","jet","job","join","joined","journey","joy","judge","jump","jungle","just","keep","kept","key","kids","kill","kind","kitchen","knew","knife","know","knowledge","known","label","labor","lack","lady","laid","lake","lamp","land","language","large","larger","largest","last","late","later","laugh","law","lay","layers","lead","leader","leaf","learn","least","leather","leave","leaving","led","left","leg","length","lesson","let","letter","level","library","lie","life","lift","light","like","likely","limited","line","lion","lips","liquid","list","listen","little","live","living","load","local","locate","location","log","lonely","long","longer","look","loose","lose","loss","lost","lot","loud","love","lovely","low","lower","luck","lucky","lunch","lungs","lying","machine","machinery","mad","made","magic","magnet","mail","main","mainly","major","make","making","man","managed","manner","manufacturing","many","map","mark","market","married","mass","massage","master","material","mathematics","matter","may","maybe","me","meal","mean","means","meant","measure","meat","medicine","meet","melted","member","memory","men","mental","merely","met","metal","method","mice","middle","might","mighty","mile","military","milk","mill","mind","mine","minerals","minute","mirror","missing","mission","mistake","mix","mixture","model","modern","molecular","moment","money","monkey","month","mood","moon","more","morning","most","mostly","mother","motion","motor","mountain","mouse","mouth","move","movement","movie","moving","mud","muscle","music","musical","must","my","myself","mysterious","nails","name","nation","national","native","natural","naturally","nature","near","nearby","nearer","nearest","nearly","necessary","neck","needed","needle","needs","negative","neighbor","neighborhood","nervous","nest","never","new","news","newspaper","next","nice","night","nine","no","nobody","nodded","noise","none","noon","nor","north","nose","not","note","noted","nothing","notice","noun","now","number","numeral","nuts","object","observe","obtain","occasionally","occur","ocean","of","off","offer","office","officer","official","oil","old","older","oldest","on","once","one","only","onto","open","operation","opinion","opportunity","opposite","or","orange","orbit","order","ordinary","organization","organized","origin","original","other","ought","our","ourselves","out","outer","outline","outside","over","own","owner","oxygen","pack","package","page","paid","pain","paint","pair","palace","pale","pan","paper","paragraph","parallel","parent","park","part","particles","particular","particularly","partly","parts","party","pass","passage","past","path","pattern","pay","peace","pen","pencil","people","per","percent","perfect","perfectly","perhaps","period","person","personal","pet","phrase","physical","piano","pick","picture","pictured","pie","piece","pig","pile","pilot","pine","pink","pipe","pitch","place","plain","plan","plane","planet","planned","planning","plant","plastic","plate","plates","play","pleasant","please","pleasure","plenty","plural","plus","pocket","poem","poet","poetry","point","pole","police","policeman","political","pond","pony","pool","poor","popular","population","porch","port","position","positive","possible","possibly","post","pot","potatoes","pound","pour","powder","power","powerful","practical","practice","prepare","present","president","press","pressure","pretty","prevent","previous","price","pride","primitive","principal","principle","printed","private","prize","probably","problem","process","produce","product","production","program","progress","promised","proper","properly","property","protection","proud","prove","provide","public","pull","pupil","pure","purple","purpose","push","put","putting","quarter","queen","question","quick","quickly","quiet","quietly","quite","rabbit","race","radio","railroad","rain","raise","ran","ranch","range","rapidly","rate","rather","raw","rays","reach","read","reader","ready","real","realize","rear","reason","recall","receive","recent","recently","recognize","record","red","refer","refused","region","regular","related","relationship","religious","remain","remarkable","remember","remove","repeat","replace","replied","report","represent","require","research","respect","rest","result","return","review","rhyme","rhythm","rice","rich","ride","riding","right","ring","rise","rising","river","road","roar","rock","rocket","rocky","rod","roll","roof","room","root","rope","rose","rough","round","route","row","rubbed","rubber","rule","ruler","run","running","rush","sad","saddle","safe","safety","said","sail","sale","salmon","salt","same","sand","sang","sat","satellites","satisfied","save","saved","saw","say","scale","scared","scene","school","science","scientific","scientist","score","screen","sea","search","season","seat","second","secret","section","see","seed","seeing","seems","seen","seldom","select","selection","sell","send","sense","sent","sentence","separate","series","serious","serve","service","sets","setting","settle","settlers","seven","several","shade","shadow","shake","shaking","shall","shallow","shape","share","sharp","she","sheep","sheet","shelf","shells","shelter","shine","shinning","ship","shirt","shoe","shoot","shop","shore","short","shorter","shot","should","shoulder","shout","show","shown","shut","sick","sides","sight","sign","signal","silence","silent","silk","silly","silver","similar","simple","simplest","simply","since","sing","single","sink","sister","sit","sitting","situation","six","size","skill","skin","sky","slabs","slave","sleep","slept","slide","slight","slightly","slip","slipped","slope","slow","slowly","small","smaller","smallest","smell","smile","smoke","smooth","snake","snow","so","soap","social","society","soft","softly","soil","solar","sold","soldier","solid","solution","solve","some","somebody","somehow","someone","something","sometime","somewhere","son","song","soon","sort","sound","source","south","southern","space","speak","special","species","specific","speech","speed","spell","spend","spent","spider","spin","spirit","spite","split","spoken","sport","spread","spring","square","stage","stairs","stand","standard","star","stared","start","state","statement","station","stay","steady","steam","steel","steep","stems","step","stepped","stick","stiff","still","stock","stomach","stone","stood","stop","stopped","store","storm","story","stove","straight","strange","stranger","straw","stream","street","strength","stretch","strike","string","strip","strong","stronger","struck","structure","struggle","stuck","student","studied","studying","subject","substance","success","successful","such","sudden","suddenly","sugar","suggest","suit","sum","summer","sun","sunlight","supper","supply","support","suppose","sure","surface","surprise","surrounded","swam","sweet","swept","swim","swimming","swing","swung","syllable","symbol","system","table","tail","take","taken","tales","talk","tall","tank","tape","task","taste","taught","tax","tea","teach","teacher","team","tears","teeth","telephone","television","tell","temperature","ten","tent","term","terrible","test","than","thank","that","thee","them","themselves","then","theory","there","therefore","these","they","thick","thin","thing","think","third","thirty","this","those","thou","though","thought","thousand","thread","three","threw","throat","through","throughout","throw","thrown","thumb","thus","thy","tide","tie","tight","tightly","till","time","tin","tiny","tip","tired","title","to","tobacco","today","together","told","tomorrow","tone","tongue","tonight","too","took","tool","top","topic","torn","total","touch","toward","tower","town","toy","trace","track","trade","traffic","trail","train","transportation","trap","travel","treated","tree","triangle","tribe","trick","tried","trip","troops","tropical","trouble","truck","trunk","truth","try","tube","tune","turn","twelve","twenty","twice","two","type","typical","uncle","under","underline","understanding","unhappy","union","unit","universe","unknown","unless","until","unusual","up","upon","upper","upward","us","use","useful","using","usual","usually","valley","valuable","value","vapor","variety","various","vast","vegetable","verb","vertical","very","vessels","victory","view","village","visit","visitor","voice","volume","vote","vowel","voyage","wagon","wait","walk","wall","want","war","warm","warn","was","wash","waste","watch","water","wave","way","we","weak","wealth","wear","weather","week","weigh","weight","welcome","well","went","were","west","western","wet","whale","what","whatever","wheat","wheel","when","whenever","where","wherever","whether","which","while","whispered","whistle","white","who","whole","whom","whose","why","wide","widely","wife","wild","will","willing","win","wind","window","wing","winter","wire","wise","wish","with","within","without","wolf","women","won","wonder","wonderful","wood","wooden","wool","word","wore","work","worker","world","worried","worry","worse","worth","would","wrapped","write","writer","writing","written","wrong","wrote","yard","year","yellow","yes","yesterday","yet","you","young","younger","your","yourself","youth","zero","zebra","zipper","zoo","zulu"];function je(o,e=4){let r=[];for(let t=0;t<e+0;++t){let i=t*(Ge.length/e),a=(t+1)*(Ge.length/e),n=o.random()*(a-i)+i|0,s=[...Ge[n]];s.unshift(s.shift().toUpperCase()),r.push(s.join(""))}return r}var Se=class extends G{constructor(e){super("Rename",e);this.getVarPrefix=e=>{switch(e){case"FunctionName":return"func";case"Parameter":return"arg";default:return"var"}};this.getUpperScope=e=>{var t;let r=e.upper;if(!r||r.type==="global")return e;for(;((t=r==null?void 0:r.upper)==null?void 0:t.type)!=="global";)r=r==null?void 0:r.upper;return r};this.scopeVisitor=(e,r)=>{let t=new Map;if(!!this.getUpperScope(r)){for(let a of r.variables){if(a.name==="arguments")continue;let n=this.getVarPrefix(a.defs[0].type)+je(this.mt,2).join("");t.set(a.name,n);for(let s of a.defs){let l=X(e.ast,s.name.range,"Identifier");!l||(l.name=n)}for(let s of a.references){let l=X(e.ast,s.identifier.range,"Identifier");!l||(l.name=n)}a.name=n}for(let a of r.references){let n=X(e.ast,a.identifier.range,"Identifier");!n||t.has(n.name)&&(n.name=t.get(n.name))}}}}rename(e){return N(this,null,function*(){this.mt=new $e.default(e.hash);for(let r of e.scopeManager.scopes)this.scopeVisitor(e,r);return this})}transform(e){return N(this,null,function*(){this.rename(e)})}};var ar=["+","-","*","/"],Ee=class extends G{constructor(e){super("JSCCalculator",e);this.functions=[]}find(e){let{functions:r}=this;function t(i){let a=z(i.body.body);if(a.length!==1||!re(a[0])||!i.id||!y(i.id))return;let n=i.id.name,s=a[0];if(!s.cases.every(c=>c.consequent&&c.consequent.length===1&&R(c.consequent[0])&&c.consequent[0].argument&&q(c.consequent[0].argument)&&y(c.consequent[0].argument.left)&&y(c.consequent[0].argument.right))||!y(s.discriminant))return;let l=s.discriminant.name,u=i.params.map(c=>y(c)&&c.name),p={identifier:n,operators:[],operIndex:u.findIndex(c=>c===l)};for(let c of s.cases){if(!c.test||!S(c.test)&&!M(c.test))return;let f=L(c.test),d=c.consequent[0].argument;if(!ar.includes(d.operator))return;let x=d.left.name,g=d.right.name,T=u.findIndex(w=>w===x),E=u.findIndex(w=>w===g),b={test:f,operator:d.operator,lhsIndex:T,rhsIndex:E};p.operators.push(b)}e.log("Found calculator function id =",p.identifier,"oper =",p.operIndex,"opers =",p.operators),r.push(p)}return m(e.ast,{FunctionDeclaration:t,FunctionExpression:t}),this}fix(e){let{functions:r}=this;return m(e.ast,{CallExpression(t){if(!y(t.callee))return;let i=t.callee.name,a;if(!(a=r.find(c=>c.identifier===i)))return;let n=t.arguments[a.operIndex];if(!S(n)&&!k(n))return;let s=L(n),l=a.operators.find(c=>c.test===s);if(!l)return;let u=t.arguments[l.lhsIndex],p=t.arguments[l.rhsIndex];h(t,{type:"BinaryExpression",left:u,right:p,operator:l.operator})}}),this}transform(e){return N(this,null,function*(){this.find(e).fix(e)})}};var ze=ee(require("@javascript-obfuscator/escodegen"));function _e(o){switch(o){case"+":return"-";case"-":return"+";case"/":return"*";case"*":return"/";default:throw new Error("Invalid operator to inverse '"+o+"'")}}function ie(o){return ze.default.generate(o,{sourceMapWithCode:!0}).code}var sr=!1;function Y(o,...e){sr&&console.log.apply(null,arguments)}function or(o,e,r,t){switch(r){case"=":return o[e]=t;case"+=":return o[e]+=t;case"-=":return o[e]-=t;case"*=":return o[e]*=t;case"/=":return o[e]/=t;case"%=":return o[e]%=t;case"<<=":return o[e]<<=t;case">>=":return o[e]>>=t;case">>>=":return o[e]>>>=t;case"&=":return o[e]&=t;case"^=":return o[e]^=t;case"|=":return o[e]|=t;default:throw new Error('Invalid assignment expression operator "'+r+'"')}}function Ae(o,e){for(let r in o){let t=o[r],i=ye(t);m(e,{Identifier(a){a.name===r&&h(a,i)}})}return e}function We(o,e){let r=new K({}),t=U(e);if(Y("chain =",ie(t)),Ae(o,t),r.math(t),Y("new chain =",ie(t)),!S(t)&&!k(t))throw new Error("Failed to evaluate chain: chain did not evaluate to number");return Y("value =",L(t)),Y("=".repeat(32)),L(t)}var lr=10;function pr(o,e){let r=new K({});for(let t of e.expressions){if(!C(t)){Ae(o,t);continue}if(!y(t.left)||!(t.left.name in o))continue;let i=t.left.name,a=t.operator,n=U(t.right);Ae(o,n),Y("(1/4) Evaluating",i,a,ie(n));for(let l=0;l<lr&&!(S(n)||k(n));++l)r.literalComparison(n),Y("(2/4) Evaluating",i,a,ie(n)),r.conditionalExpression(n),Y("(3/4) Evaluating",i,a,ie(n)),r.math(n),Y("(4/4) Evaluating",i,a,ie(n));if(!S(n)&&!k(n))throw new Error("Failed to evaluate assignment expression, ie is not a numeric value");Y("(4/4) Evaluated",i,a,ie(n));let s=L(n);or(o,i,a,s),Y(`stack[${i}] = ${o[i]}`),Y("=".repeat(32)),t.type="EmptyStatement"}return e}var we=class extends G{constructor(e){super("JSCControlFlow",e)}deflatten(e){function r(t){let i=e.scopeManager.acquire(t);if(!i||!v(t.body))return;let a=t.body.body.filter(n=>n.type==="WhileStatement");for(let n of a){if(e.log("Found while statement"),!q(n.test)||!S(n.test.right)&&!k(n.test.right))continue;let s={},l=n.test,u=!1;for(;q(l);)u=l.operator==="+",y(l.left)&&(s[l.left.name]=l.left.start),y(l.right)&&(s[l.right.name]=l.right.start),l=l.left;if(!u)continue;for(let V in s){let H=i.references.find(j=>j.identifier.range[0]===s[V]);if(!H||!H.resolved||H.resolved.defs.length===0||H.resolved.defs[0].type!=="Variable")continue;let P=H.resolved.defs[0];!P.node.init||!S(P.node.init)&&!k(P.node.init)||(P.parent.declarations=P.parent.declarations.filter(j=>j.range[0]!==P.node.range[0]&&j.range[1]!==P.node.range[1]),s[V]=L(P.node.init))}let p=L(n.test.right);if(e.log(s,p),!v(n.body))continue;let c=n.body.body[n.body.body.length-1];if(!re(c)||!y(c.discriminant))continue;let f=c.discriminant.start,d=i.references.find(V=>V.identifier.range[0]===f);if(!d||!d.resolved||d.resolved.defs.length===0||d.resolved.defs[0].type!=="Variable")continue;let x=d.resolved.defs[0];if(!x.node.init||!q(x.node.init))continue;let g=c.cases.length,T=0,E=x.node.init,b=n.test.left,w=[];for(;;){if(T>g)throw new Error(`JSconfuser control flow switch calculation failed (iter=${T}>maxLoops=${g})`);e.log(`Iteration #${T+1}/${g+1}`);let V=We(s,b);if(V===p){e.log("Switch calculation end",V,"===",p,"stack =",s);break}let H=We(s,E),P=` (whileState = ${V}, state = ${H}, stack = ${JSON.stringify(s)})`,j=c.cases.find(pe=>pe.test&&L(pe.test)===H);if(!j)throw new Error("Switch case not found"+P);if(j.consequent.length!==2)throw new Error('Switch case is not of "2" length'+P);if(j.consequent[1].type!=="BreakStatement")throw new Error("Switch case consequent[1] is not a BreakStatement"+P);if(!D(j.consequent[0]))throw new Error("Switch case consequent[0] is not an ExpressionStatement"+P);if(!M(j.consequent[0].expression))throw new Error("Switch case consequent[0]<ExpressionStatement>.expression is not a UnaryExpression"+P);if(!J(j.consequent[0].expression.argument))throw new Error("Switch case consequent[0]<ExpressionStatement>.expression<UnaryExpression> is not a SequenceExpression"+P);let le=j.consequent[0].expression.argument;pr(s,le),le.expressions=le.expressions.filter(pe=>pe.type!=="EmptyStatement"),w.push(le.expressions),e.log("new stack =",s),T++}h(n,{type:"SequenceExpression",expressions:w.flat()})}}return m(e.ast,{FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r}),this}fixSwitch(e){function r(t){let i=e.scopeManager.acquire(t);if(!i)return;let a=t.body.body.filter(n=>re(n));for(let n of a){if(!y(n.discriminant))continue;let s=n.discriminant.name,l=i.variables.find(g=>g.name===s);if(!l||l.defs.length===0||l.defs[0].type!=="Variable")continue;let u=l.defs[0];if(!u.node.init||!q(u.node.init))continue;let p=u.node.init;if(!n.cases.every(g=>g.test&&(k(g.test)||S(g.test))))continue;let c=0,f="*",d=0,x="+";if(!!q(p.left)&&!(!k(p.right)&&!S(p.right))&&!(!k(p.left.right)&&!S(p.left.right))&&!!y(p.left.left)){c=L(p.left.right),f=_e(p.left.operator),d=L(p.right),x=_e(p.operator);for(let g of n.cases){let T=L(g.test);T=se(se(T,x,d),f,c),h(g.test,{type:"Literal",value:T})}n.discriminant.name=p.left.left.name,u.parent.declarations=u.parent.declarations.filter(g=>g.range[0]!==u.node.range[0]&&g.range[1]!==u.node.range[1])}}}return m(e.ast,{FunctionDeclaration:r,FunctionExpression:r}),this}transform(e){return N(this,null,function*(){this.fixSwitch(e).deflatten(e)})}};var oe=class{constructor(e,r,t,i){this.shiftedArrays=0;this.stringArrays=[];this.stringDecoders=[];this.stringDecoderReferences=[];this.controlFlowStorageNodes={};this.removeGarbage=!0;this.enableLog=!0;this.hash=0;this.ast=e,this.transformers=this.buildTransformerList(r),this.source=i,this.scopeManager=Je.analyze(this.ast,{sourceType:t?"module":"script"})}log(e,...r){!this.enableLog||console.log(e,...r)}buildTransformerList(e){let r=[];for(let[t,i]of e)switch(t.toLowerCase()){case"controlflow":r.push(new de(i));break;case"desequence":r.push(new ce(i));break;case"literalmap":r.push(new fe(i));break;case"memberexpressioncleaner":r.push(new me(i));break;case"simplify":r.push(new K(i));break;case"stringdecoder":r.push(new ge(i));break;case"deadcode":r.push(new he(i));break;case"demangle":r.push(new be(i));break;case"arraymap":r.push(new xe(i));break;case"rename":r.push(new Se(i));break;case"jsc-calculator":r.push(new Ee(i));break;case"jsc-controlflow":r.push(new we(i));break;default:throw new TypeError(`Transformer "${t}" is invalid, it does not exist`)}return r}};var Ye=ee(require("prettier"));function cr(o){let e=2493774369,r=o.length;for(;r;)e=e*33^o.charCodeAt(--r);return e>>>0}var ke=class{constructor(){this.defaultOptions={ecmaVersion:"latest",transformChainExpressions:!0,customTransformers:[],rename:!1,sourceType:"both",loose:!1}}buildOptions(e={}){return Z(Z({},this.defaultOptions),e)}buildAcornOptions(e){return{ecmaVersion:e.ecmaVersion,sourceType:e.sourceType,ranges:!0}}parse(e,r,t){let i=t.loose?dr:ur;if(r.sourceType!=="both")return i.parse(e,r);try{return r.sourceType=t.sourceType="module",i.parse(e,r)}catch(a){return r.sourceType=t.sourceType="script",i.parse(e,r)}}deobfuscateNode(e,r){return N(this,null,function*(){let t=this.buildOptions(r),i=[["Simplify",{}],["MemberExpressionCleaner",{}],["LiteralMap",{}],["DeadCode",{}],["Demangle",{}],["StringDecoder",{}],["Simplify",{}],["MemberExpressionCleaner",{}],["Desequence",{}],["ControlFlow",{}],["Desequence",{}],["MemberExpressionCleaner",{}],["Simplify",{}],["DeadCode",{}],["Simplify",{}],["DeadCode",{}]],a=new oe(e,t.customTransformers.length>0?t.customTransformers:i,t.sourceType==="module");for(let n of a.transformers)console.log("Running",n.name,"transformer"),yield n.transform(a);if(t.rename){let n=Ie.default.generate(a.ast,{sourceMapWithCode:!0}).code,s=this.parse(n,this.buildAcornOptions(t),t);a=new oe(s,[["Rename",{}]],t.sourceType==="module"),a.hash=cr(n);for(let l of a.transformers)console.log("(rename) Running",l.name,"transformer"),yield l.transform(a)}return a.ast})}deobfuscateSource(e,r){return N(this,null,function*(){let t=this.buildOptions(r),i=this.buildAcornOptions(t),a=this.parse(e,i,t);a=yield this.deobfuscateNode(a,t),e=Ie.default.generate(a,{sourceMapWithCode:!0}).code;try{e=Ye.default.format(e,{semi:!1,singleQuote:!0,parser:(n,s)=>{let l=this.parse(n,i,t);return t.transformChainExpressions&&m(l,{ChainExpression(u){u.expression.type==="CallExpression"?h(u,Te(Z({},u.expression),{type:"OptionalCallExpression",expression:void 0})):u.expression.type==="MemberExpression"&&h(u,Te(Z({},u.expression),{type:"OptionalMemberExpression",expression:void 0}))}}),l}})}catch(n){console.log(n)}return e})}};module.exports=ir(fr);0&&(module.exports={Deobfuscator,Transformer});
